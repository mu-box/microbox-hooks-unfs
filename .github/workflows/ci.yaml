name: CI

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
  workflow_dispatch:

jobs:
  test:
    name: Test Hooks Against ${{ matrix.service }} ${{ matrix.version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - unfs
        version:
          - '0.9'
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup Test Network
        run: docker network create --driver=bridge --subnet=192.168.0.0/16 --opt="com.docker.network.driver.mtu=1450" --opt="com.docker.network.bridge.name=redd0" microbox-test

      - name: Test Hooks
        run: make test-${{ matrix.version }} SERVICE=${{ matrix.service }}

      - name: Cleanup Test Network
        if: always()
        run: docker network rm microbox-test

  build:
    name: Publish ${{ matrix.service }} Hooks
    runs-on: ubuntu-latest
    needs: test
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        service: 
          - unfs
        version:
          - '0.9'
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

        # the default image for act doesn't include this tool, but the actual GHA environment does...
      - name: (LOCAL ONLY) Install AWS CLI
        if: github.actor == 'nektos/act'
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS credentials for publication
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/s3-write
          role-duration-seconds: 1200
          aws-region: us-east-1

      - name: Publish
        if: success()
        run: |
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            if [ "${{ github.ref_type }}" != "tag" ]; then
              stability=beta
            else
              stability=stable
            fi
          else
            stability=alpha
          fi
          make ${stability} SERVICE=${{ matrix.service }}

      - name: Rebuild Images
        if: github.event_name != 'pull_request' && github.repository_owner == 'mu-box'
        uses: peter-evans/repository-dispatch@v1.1.3
        with:
          repository: mu-box/microbox-docker-${{ matrix.service }}
          token: ${{ secrets.IMAGES_TOKEN }}
          event-type: Rebuild images with updated hooks (${{ github.ref_name }}@${{ github.sha }})
